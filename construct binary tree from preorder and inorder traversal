class Solution:
    
    def PrintTree(self,root):
        if root is None:
            return
        
        print(root.val , end=' ')
        self.PrintTree(root.left)
        self.PrintTree(root.right)    
    
    def buildTree(self, preorder,inorder):
        if len(inorder) == 0 or len(preorder)==0:
            return None
        
        val = preorder[0]
        root = TreeNode(val)
        
        i = 0
        while i < len(inorder):
            if val == inorder[i]:
                break
            else:
                i += 1
                
        leftpreorder = preorder[1:1+i]
        rightpreorder = preorder[1+i:]
        
        leftinorder = inorder[0:i]
        rightinorder = inorder[i+1:]
        

        root.left = self.buildTree(leftpreorder,leftinorder)
        root.right = self.buildTree(rightpreorder,rightinorder)
                
        return root 
