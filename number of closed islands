class Solution:
    def closedIsland(self, grid: List[List[int]]) -> int:
        count, numRow, numCol = 0, len(grid), len(grid[0])
        def dfs(i, j):
            nonlocal grid
            if i < 0 or j < 0 or i >= numRow or j >= numCol: return False
            if grid[i][j] == 1: return True
            grid[i][j] = 1
            return dfs(i, j+1) & dfs(i+1, j) & dfs(i-1, j) & dfs(i, j-1) # work
            # return dfs(i, j+1) and dfs(i+1, j) and dfs(i-1, j) and dfs(i, j-1) # not work

        for i in range(numRow):
            for j in range(numCol):
                if grid[i][j] == 0 and dfs(i ,j):
                    count+=1

        return count
