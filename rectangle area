class Solution(object):
    def computeArea(self, ax1, ay1, ax2, ay2, bx1, by1, bx2, by2):
        """
        :type ax1: int
        :type ay1: int
        :type ax2: int
        :type ay2: int
        :type bx1: int
        :type by1: int
        :type bx2: int
        :type by2: int
        :rtype: int
        """
        
        a_area = self.helper(ax2 - ax1, ay2 - ay1)
        b_area = self.helper(bx2 - bx1, by2 - by1)
        overrap = self.helper(min(ax2, bx2) - max(ax1, bx1), min(ay2, by2) - max(ay1, by1))
        
        return a_area + b_area - overrap if overrap > 0 else a_area + b_area
    
    def helper(self, width, height):
        return width * height if width > 0 and height > 0 else 0
