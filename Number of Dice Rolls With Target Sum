class Solution:
    def numRollsToTarget(self, n: int, k: int, target: int) -> int:
        
        # result I want is how many ways I can get target with all dice used
        
        # dp[i][j] = after i dice thrown, how many ways sums to j
        
        # dp[i][j] = sum([dp[i-1][j-face] for face in range(1, k+1)])
        
        # base case: everything 0 return 1, j<0 i==0 return 0
        
        @lru_cache(None)
        def dp(i, j):
            
            if j == 0 and i == 0:
                return 1
            
            if j < 0 or i == 0:
                return 0
            
            return sum([dp(i-1, j - face) for face in range(1, k+1)])
        
        return dp(n, target) % (10 ** 9 + 7)
            
