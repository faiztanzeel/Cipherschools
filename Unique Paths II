class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        dp = [[0 for i in range(len(obstacleGrid[0]))] for j in range(len(obstacleGrid))]
        for i in range(len(obstacleGrid)):
            for j in range(len(obstacleGrid[0])):
                if i==0 and j==0: dp[0][0] = 0 if obstacleGrid[0][0]==1 else 1
                elif obstacleGrid[i][j]==1: dp[i][j] = 0
                else:
                    left = 0 if obstacleGrid[i-1][j]==1  else dp[i-1][j]
                    top  = 0 if obstacleGrid[i][j-1]==1 else dp[i][j-1]
                    dp[i][j] = top + left
        return dp[-1][-1]
