from collections import OrderedDict
class LRUCache:
    def __init__(self, capacity: int):
        self.cap = capacity
        self.d = OrderedDict()
    
    def get(self, key: int) -> int:
        if key in self.d:
            self.d.move_to_end(key)
        
        return self.d.get(key, -1)
        
    def put(self, key: int, value: int) -> None:
        self.d[key] = value
        self.get(key)
        
        if len(self.d) > self.cap:
            self.d.popitem(last=False)
